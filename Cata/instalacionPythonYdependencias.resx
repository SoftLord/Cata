<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>